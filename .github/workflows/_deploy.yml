name: Deploy package

on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/${{ inputs.package-name }}

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Install
      run: npm ci
      
    - name: Lint
      run: npm run lint
     
    - name: Test
      run: npm run test
     
    - name: Publish
      run: npm publish --access=public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Read package.json
      id: package-json
      run: |
        content=`cat ./package.json`
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        echo "PACKAGE_JSON=$content" >> $GITHUB_ENV
        echo "VERSION=${{ fromJson(env.content) }}" >> $GITHUB_ENV
        echo "ESCAPED_VERISON=$(printf '%s\n' "$VERSION" | sed -e 's/[]\/$*.^[]/\\&/g')" >> $GITHUB_ENV
      
    - name: Get Changelog
      id: changelog
      run: |
        changelog=`sed -n "/^## \[$ESCAPED_VERSION]/,/^## /p" CHANGELOG.md | sed '$ d' | sed '1,1d'`
        changelog1="${changelog//'%'/'%25'}"
        changelog1="${changelog1//$'\n'/'%0A'}"
        changelog1="${changelog1//$'\r'/'%0D'}"
        changelog2="${changelog//$'\n'/'\\n'}"
        changelog2="${changelog2//$'\r'/'\\r'}"
        changelog2="${changelog2//$'('/'\('}"
        changelog2="${changelog2//$')'/'\)'}"
        changelog2="${changelog2//$'`'/'\`'}"
        changelog2="${changelog2//$'"'/'\"'}"
        changelog2="${changelog2//"'"/"'\''"}"
        echo "escaped=$changelog" >> $GITHUB_OUTPUT
        echo "unescaped=$changelog1" >> $GITHUB_OUTPUT
        echo "doubleescaped=$changelog2" >> $GITHUB_OUTPUT

    - name: Github Release
      id: release
      uses: softprops/action-gh-release@v1
      with:
        body: "${{steps.changelog.outputs.unescaped}}"
        tag_name: "$VERSION"

    - name: Prepare Discord Message
      id: discord-msg
      working-directory: ./
      run: |
        awk '{
          gsub("#VERSION#","$VERSION",$0);
          gsub("#PACKAGE#","${{inputs.package-name}}",$0);
          gsub("#DESCRIPTION#","${{steps.changelog.outputs.doubleescaped}}",$0);
          print $0;
        }' ./.github/workflows/deploy_discord_message.json > ./.github/workflows/deploy_discord_message2.json

    - name: Send Discord Message
      uses: tsickert/discord-webhook@v4.0.0
      working-directory: ./
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        raw-data: "./.github/workflows/deploy_discord_message2.json"
    
    - name: Summary
      run: |
        echo "# Summary"
        echo "Version ${{}}"